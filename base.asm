IDEAL
MODEL small
STACK 100h
JUMPS
DATASEG
Sudokutable1 db 1 dup(31h,32h,33h,34h,35h,36h,37h,38h,39h,34h,37h,39h,31h,32h,38h,36h,35h,33h,38h,36h,35h,37h,39h,33h,32h,34h,31h,37h,38h,36h,35h,33h,32h,39h,31h,34h,33h,39h,34h,36h,37h,31h,35h,32h,38h,35h,31h,32h,39h,38h,34h,33h,36h,37h,39h,35h,31h,38h,36h,37h,34h,33h,32h,36h,33h,38h,32h,34h,39h,31h,37h,35h,32h,34h,37h,33h,31h,35h,38h,39h,36h,0Ah)
Sudokutable2 db 81 dup (0) 
RowHolder db 9 dup (?)
returnadress dw (?)
     SU      db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14
	         db 14,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,14,14,14,14,14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4
			 db 14,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,14,14,14,14,14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4
			 db 14,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,14,14,14,14,14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4
			 db 14,4,4,14,14,14,14,14,14,14,14,14,14,14,4,4,4,14,14,14,14,14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4
			 db 14,4,4,14,14,14,14,14,14,14,14,14,14,14,4,4,4,14,14,14,14,14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4
			 db 14,4,4,14,14,14,14,14,14,14,14,14,14,14,4,4,4,14,14,14,14,14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4
			 db 14,4,4,14,14,14,14,14,14,14,14,14,14,14,4,4,4,14,14,14,14,14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4
			 db 14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4
			 db 14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4
			 db 14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4
			 db 14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4
			 db 14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4
			 db 14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4
			 db 14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0
			 db 14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0
			 db 14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0
			 db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0
			 db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0
			 db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0
			 db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0
			 db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0
			 db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0
			 db 14,0,0,0,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0
			 db 14,0,0,0,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0
			 db 14,0,0,0,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0
			 db 14,0,0,0,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0
			 db 14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
			 db 14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
			 db 14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
			 db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14
	 DO      db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14
	         db 14,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,14,14,14,14,14,14,14,14,4,4,4,4,4,4,4,4,4,4,4,4,4,4,14,14,14,14
	         db 14,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,14,14,14,14,14,14,14,14,4,4,4,4,4,4,4,4,4,4,4,4,4,4,14,14,14,14
	         db 14,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,14,14,14,14,14,14,14,14,4,4,4,4,4,4,4,4,4,4,4,4,4,4,14,14,14,14
			 db 14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4,14,14,14,14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4,14
			 db 14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4,14,14,14,14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4,14
			 db 14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4,14,14,14,14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4,14
			 db 14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4,14,14,14,14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4,14
			 db 14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4,14,14,14,14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4,14
			 db 14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4,14,14,14,14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4,14
			 db 14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4,14,14,14,14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4,14
			 db 14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4,14,14,14,14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4,14
			 db 14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4,14,14,14,14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4,14
			 db 14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4,14,14,14,14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4,14
             db 14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14
             db 14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14
             db 14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14
             db 14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14
             db 14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14
             db 14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14
             db 14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14
             db 14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14
             db 14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14
             db 14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14
             db 14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14
             db 14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14
             db 14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14
			 db 14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14
			 db 14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14
			 db 14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14
			 db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14
			 db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14
			 db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14
			 db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14
			 db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14
			 db 14,14,14,14,14,14,14,14,14,14,14,14,14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14
	 KU      db 14,14,14,14,14,14,14,14,14,14,14,14,14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14
			 db 14,4,4,14,14,14,14,14,14,14,14,14,14,4,4,14,14,14,14,14,14,14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4
			 db 14,4,4,14,14,14,14,14,14,14,14,4,4,14,14,14,14,14,14,14,14,14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4
			 db 14,4,4,14,14,14,14,14,14,14,14,4,4,14,14,14,14,14,14,14,14,14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4
			 db 14,4,4,14,14,14,14,14,14,14,14,4,4,14,14,14,14,14,14,14,14,14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4
			 db 14,4,4,14,14,14,14,14,14,4,4,14,14,14,14,14,14,14,14,14,14,14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4
			 db 14,4,4,14,14,14,14,14,14,4,4,14,14,14,14,14,14,14,14,14,14,14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4
			 db 14,4,4,14,14,14,14,14,14,4,4,14,14,14,14,14,14,14,14,14,14,14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4
			 db 14,4,4,14,14,14,14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4
			 db 14,4,4,14,14,14,14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4
			 db 14,4,4,14,14,14,14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4
			 db 14,4,4,14,14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4
			 db 14,4,4,14,14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4
			 db 14,4,4,14,14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,4,4
			 db 14,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0
			 db 14,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0
			 db 14,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0
			 db 14,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0
			 db 14,0,0,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0
			 db 14,0,0,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0
			 db 14,0,0,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0
			 db 14,0,0,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0
			 db 14,0,0,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0
			 db 14,0,0,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0
			 db 14,0,0,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0
			 db 14,0,0,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0
			 db 14,0,0,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0
			 db 14,0,0,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
			 db 14,0,0,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
			 db 14,0,0,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
			 db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14
	House    db 12,4,4,4,4,4,4,4,4,4,12
             db 12,4,4,4,4,4,4,4,4,4,12	
	         db 4,4,4,4,4,4,4,4,4,4,4
	         db 4,4,4,4,4,4,4,4,4,4,4
			 db 15,15,15,15,15,15,15,15,15,15,15
			 db 15,15,15,15,15,15,15,15,15,15,15
			 db 15,15,15,0,15,15,15,0,15,15,15
			 db 15,15,15,0,15,15,15,0,15,15,15
			 db 15,15,15,15,15,0,15,15,15,15,15
			 db 15,15,15,15,15,0,15,15,15,15,15
LightRedColor db 12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12
             db 12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12
			 db 12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12
			 db 12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12
		     db 12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12
			 db 12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12
			 db 12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12
			 db 12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12
			 db 12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12
			 db 12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12
			 db 12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12
             db 12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12
             db 12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12
			 db 12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12
			 db 12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12
		     db 12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12
			 db 12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12
			 db 12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12
			 db 12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12
			 db 12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12
YellowColor  db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14
             db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14
             db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14
             db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14
             db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14
             db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14
             db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14
             db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14
             db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14
             db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14
             db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14
             db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14
             db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14
             db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14
             db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14
             db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14
             db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14
             db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14
             db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14
             db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14
	button   db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14
			 db 14,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14
			 db 14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14
			 db 14,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,0,0,0,0,14,14,14,14,14,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,0,0,0,0,14,14,14,14,14,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,0,0,0,0,14,14,14,14,0,0,14,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,0,0,0,0,14,14,14,14,0,0,14,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,0,0,0,0,14,14,14,0,0,14,14,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,0,0,0,0,14,14,14,0,0,14,14,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,0,0,0,0,14,14,0,0,14,14,14,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,0,0,0,0,14,14,0,0,14,14,14,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,0,0,0,0,14,0,0,14,14,14,14,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,0,0,0,0,0,0,14,14,0,0,0,0,0,0,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,0,0,0,0,14,0,0,14,14,14,14,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,0,0,0,0,0,0,14,14,0,0,0,0,0,0,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,0,0,0,0,0,0,14,14,14,14,14,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,0,0,0,0,0,0,14,14,14,14,14,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,0,0,0,0,0,14,14,14,14,14,14,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,0,0,0,0,0,0,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,0,0,0,0,0,14,14,14,14,14,14,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,0,0,14,14,0,0,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,14,14,0,0,14,14,0,0,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14			 
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,14
			 db 14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14
			 db 14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14
		     db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14
buttonInfo   db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14
			 db 14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14
			 db 14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14
			 db 14,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,0,0,0,0,0,0,14,14,14,14,14,14,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,0,0,14,14,14,14,0,0,14,14,14,14,0,0,14,14,14,14,14,14,14,14,0,0,0,0,14,14,14,14,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,0,0,14,14,14,14,0,0,14,14,14,14,0,0,14,14,14,14,14,14,14,14,0,0,0,0,14,14,14,14,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,0,0,14,14,14,14,0,0,14,14,14,14,0,0,14,14,14,14,14,14,14,14,0,0,0,0,14,14,14,14,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,0,0,14,14,14,14,0,0,14,14,14,14,0,0,0,0,0,0,0,0,14,14,0,0,0,0,14,14,14,14,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,0,0,14,14,14,14,0,0,14,14,14,14,0,0,0,0,0,0,0,0,14,14,0,0,0,0,14,14,14,14,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,0,0,14,14,14,14,0,0,14,14,14,14,0,0,14,14,14,14,14,14,14,14,0,0,0,0,14,14,14,14,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,14,14,0,0,14,14,14,14,0,0,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14			 
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,14,14,0,0,14,14,14,14,0,0,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,14
			 db 14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14
			 db 14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14
		     db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14			 
			 			 
			 
buttonExit   db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14
			 db 14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14
			 db 14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14
			 db 14,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,14,14,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,0,0,0,0,14,14,14,14,14,14,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,0,0,0,0,14,14,14,14,14,14,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,14,14,0,0,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,0,0,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,0,0,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,0,0,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,14,14,0,0,14,14,14,14,14,14,0,0,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14			 
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,14,14,0,0,14,14,14,14,14,14,0,0,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14,0,14
			 db 14,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,14
			 db 14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,14
			 db 14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14
		     db 14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14
    chat     db 12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12
	         db 12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,15,12,15,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12
			 db 12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,15,12,15,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12
			 db 12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,15,12,15,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12
			 db 12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,15,12,15,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12
			 db 12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,15,12,15,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12
			 db 12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,15,12,15,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12
			 db 12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,15,12,15,15,15,15,15,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12
			 db 12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,15,12,12,12,12,12,15,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12
			 db 12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,15,15,15,15,15,12,15,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12
			 db 12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,15,12,15,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12
			 db 12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,15,12,15,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12
			 db 12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,15,12,15,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12
			 db 12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,15,12,15,15,15,15,15,15,15,15,15,15,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12
			 db 12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,15,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12
			 db 12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,15,15,15,15,15,15,15,15,15,15,15,15,15,15,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12
CyanColor    db 3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
             db 3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
			 db 3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
			 db 3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
		     db 3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
			 db 3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
			 db 3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
			 db 3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
			 db 3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
			 db 3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
			 db 3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
             db 3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
             db 3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
			 db 3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
			 db 3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
		     db 3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
			 db 3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
			 db 3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
			 db 3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
			 db 3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
pic_width  equ 42
pic_height equ 31
House_height equ 10
House_width equ 11
picX dw 160 - pic_width/2
picY dw 40 - pic_height/2
HouseX dw 33 
HouseY dw 160
Color_width equ 80 
Color_height equ 20 
ButtonX dw 147 
ButtonY dw 80 
ButtonExitY dw 160 
ButtonInfoY dw 120 
Button_height equ 32
Button_width equ 116
ChatX dw 0 
ChatY dw 140
Chat_height equ 16
Chat_width equ 80
moodle db (?)
GameX dw 185	 
GameY dw 85 
Game_width equ 48 
Game_height equ 7
msg db "Press any key to continue...$"
CyanColor_width equ 60 
row db "Choose Row:"
msgrow db "Row:$"
msgcolumn db "column:$"
msgnumber db "Number:$"
RowKelet db (?)
ColumnKelet db (?) 
NumberKelet db (?)
msgeror db "Omg$"
filename db 'Loser.bmp',0
filename2 db 'Winner.bmp',0
filename3 db 'Info.bmp',0
filehandle dw ?
Header db 54 dup (0)
Palette db 256*4 dup (0)
ScrLine db 320 dup (0)
ErrorMsg db 'Error', 13, 10,'$'
Wrong db "Wrong Place$"
MsgInfo db "Hi everyone , I'm the creator of this  game and i hope that you all will enjoy as much  as u can" , 0Ah , "Instructions - choose row and press enter to confirm / Backspc ( the buuton that above to the enter ) to delete .$" 
many1 db (0)
many2 db (0)
many3 db (0)
many4 db (0)
many5 db (0)
many6 db (0)
many7 db (0)
many8 db (0)
many9 db (0)
Sum db (0)
; --------------------------
; Your variables here
; --------------------------
CODESEG
proc Random ; Dl , Al recieve random number ( 31h - 39h ) 
     mov ah, 2Ch
     int 21h ; Dh -- > secondes ( random number from 1-60 ) 
     mov bl , dh
     mov bh , 0 ; Bx hold secondes
     mov dl , [ byte ptr ds:bx] ; Dl get the number on the random location ( the number appear in the sudoku table )
     cmp dl , 0Ah ; Check that Dl didnt get 0Ah ( Enter ) 
     jne altime
     add bx , 4 
     mov dl , [ byte ptr ds:bx ] ; Dl get the next number on the sudoku ( for sure not 0Ah )
altime:
     inc bx 
     mov al , [ byte ptr ds:bx] ; Al get the next number on the sudoku
     cmp al , 0Ah ; Check that Al didnt get 0Ah ( Enter ) 
     jne finish
     inc bx   
     mov al , [ byte ptr ds:bx] ; Al get the next number on the sudoku ( for sure not 0Ah ) 
finish:
     ret 
endp Random 
proc BlackColorProc ; Delete the row/column/number + input number in the sudoku mode  
     mov cx, 11		; number of characters
     mov bp, offset Wrong
	 mov ah, 13h
     mov bh, 0		; video page number
     mov bl, 11111111b	; attribute
     mov dl, 1		; starting column
     mov dh, 1		; starting row
     mov al, 0		; 0-3 indicating mode
     push ds
     pop es		; es:bp pointer to string to be written
     int 10h    
     mov bh, 0		; video page number
     mov bl, 11111111b	; attribute
     mov dl, 1		; starting column
     mov dh, 3		; starting row
     mov al, 0		; 0-3 indicating mode
     push ds
     pop es		; es:bp pointer to string to be written
     int 10h    
	 ret 
endp BlackColorProc
proc Printing ; Mov the cursor to specific place 
	 mov bh, 0	
     mov ah, 2	
     int 10h
	 ret 
endp Printing
proc printchar ; printing char 
     mov ah, 2
     int 21h
	 ret
endp printchar
proc PrintString ; printing string 
mov ah, 13h
mov bh, 0		; video page number
mov bl, 00001111b	; attribute
mov dl, 1		; starting column
mov dh, 1		; starting row
mov al, 0		; 0-3 indicating mode
push ds
pop es		; es:bp pointer to string to be written
int 10h
ret 
endp PrintString
proc PrintSudoku ; Print the sudoku table 
   	 mov bx , offset Sudokutable1
	 mov cx , 89 
print:
	 mov dl , [ byte ptr ds:bx ] 
     mov ah , 2h 
     int 21h 
     inc bx 
     loop print	 
	 ret
endp PrintSudoku
proc SwitchNumber ; Switching 2 number ( al , dl ) on the sudoku table
     lea bx , [ Sudokutable1 ] 
	 dec bx 
	 mov cx , 82 ; Loop counter
loop3:
     inc bx 
	 cmp [ byte ptr ds:bx ] , al ; Is this byte is al ? 
	 je itsal 
	 cmp [ byte ptr ds:bx ] , dl ; Is this byte is dl ? 
	 je itsdl
	 cmp cx , 0 ; End of loop 
	 je finishloop
	 loop loop3 
itsal:
     mov [ byte ptr ds:bx ] , dl ; Switch the numbers
     cmp cx , 0 ; End of loop 
	 je finishloop
	 loop loop3 
itsdl:
     mov [ byte ptr ds:bx ] , al ; Switch the numbers
     cmp cx , 0 ; End of loop 
	 je finishloop
	 loop loop3 
finishloop:
	 ret 
endp SwitchNumber
proc Delay ; Delay the program 
     mov di , 18
     mov ah , 0
     int 1ah
     mov bx , dx
Delay1:
     mov ah , 0
     int 1ah
     sub dx , bx
     cmp di , dx
     ja Delay1
  ret 
endp Delay
proc Cycle ; Drawing pic 
	 mov [ byte ptr ds:offset moodle ] , dl 	
DrawPic:
     mov cl, [byte ptr ds:si]
     push ax
     push bx
     push cx
     push dx
     call PutPixel
     pop dx
     pop cx
     pop bx
     pop ax 
     inc si
     inc ax
     dec dl
     jnz DrawPic                  ; X loop
     mov dl, [ byte ptr ds: offset moodle ]
	 push dx 
	 mov dh , 0 
     sub ax, dx 
	 pop dx 
     inc bx  
     dec dh
     jnz DrawPic                  ; Y loop
     ret
endp Cycle
proc PutPixel ; Put pixels 
; AX<-X, BX<-Y, DL<-Color
        mov di, 0
  	mov dx, bx
  	shl dx, 8
  	shl bx, 6
  	add di, ax
  	add di, bx
  	add di, dx
  	mov al, cl
  	stosb
  	ret
endp PutPixel
proc PrintMessage ; Printing massage 
     mov ah , 09h 
	 int 21h 
	 ret
endp PrintMessage
proc LightRedColorProc ; Print light color 
	 xor ax, ax
     xor bx, bx 
loopLightRedColor:
	 push ax 
	 push bx 
	 mov dh , Color_height
	 mov dl , Color_width
	 mov si , offset LightRedColor
	 call Cycle
	 pop bx 
	 pop ax 
	 add bx , 20 
	 cmp bx , 200 
	 jne loopLightRedColor
	 ret 
endp LightRedColorProc
proc HouseProc ; Print house---------------------------------- Unused but i puted if i will want to add 
	 mov dh , House_height
	 mov dl , House_width
	 mov si , offset House
	 mov ax, [HouseX]
     mov bx, [HouseY]
	 call Cycle
	 ret
endp HouseProc
proc ChatProc ; Print chat---------------------------------- Unused but i puted if i will want to add 
	 mov dh, Chat_height
     mov dl, Chat_width
     mov ax, [ChatX]
     mov bx, [ChatY]
     mov si , offset chat
	 call Cycle
	 ret 
endp ChatProc
proc ButtonProc ; Print buttons
     mov bx , [ButtonY] 
	 mov ax , [ButtonX]
	 mov dh , Button_height
	 mov dl , Button_width
	 mov si , offset button
	 call Cycle
     mov bx , [buttoninfoY] 
	 mov ax , [buttonX]
	 mov dh , Button_height
	 mov dl , Button_width
	 mov si , offset buttoninfo 
	 call Cycle
     mov bx , [buttonExitY] 
	 mov ax , [buttonX]
	 mov dh , Button_height
	 mov dl , Button_width
	 mov si , offset buttonExit 
	 call Cycle
	 ret
endp ButtonProc
proc WordProc ; Print the word SUDOKU
	 mov dh, pic_height
     mov dl, pic_width
     mov ax, [picX]
     mov bx, [picY]
     mov si , offset SU
	 call Cycle
	 mov dh, pic_height
     mov dl, pic_width
	 mov si , offset DO
	 mov ax, [picX] 
	 add ax, 46
     mov bx, [picY]
	 call Cycle
	 mov dh, pic_height
     mov dl, pic_width
	 mov si , offset KU
	 mov ax, [picX] 
	 add ax, 92
     mov bx, [picY]
	 call Cycle
	 ret 
endp WordProc
proc YellowColorProc ; Print the yellow color 
	 mov ax , 80 
	 mov bx , 0 
loopYellowColor:
	 push ax 
	 push bx 
	 mov dh , Color_height
	 mov dl , Color_width
	 mov si , offset YellowColor
	 call Cycle
	 pop bx 
	 pop ax 
	 add bx , 20 
	 cmp bx , 200 
	 jne loopYellowColor
	 mov bx , 0 
	 add ax , 80 
	 cmp ax , 320 
	 jne loopYellowColor
	 ret 
endp YellowColorProc
proc CyanColorProc3 ; Print the cyan color 
     mov ax , 260
     xor bx, bx 
loopCyanRedColor3:
	 push ax 
	 push bx 
	 mov dh , Color_height
	 mov dl , CyanColor_width
	 mov si , offset CyanColor
	 call Cycle
	 pop bx 
	 pop ax 
	 add bx , 20 
	 cmp bx , 200 
	 jne loopCyanRedColor3
	 ret 
endp CyanColorProc3
Proc EndKelet ; Print the number that inputed + checking eror 
     mov bx , offset Sudokutable2
	 dec bx 
	 mov al , [ byte ptr ds:offset ColumnKelet ] 
	 dec al 
	 sub al , 30h 
	 mov cl , 9 
	 mul cl 
	 mov dl , [ byte ptr ds: offset RowKelet ] 
	 mov dh , 0 
	 sub dl , 30h
	 add ax , dx 
	 add bx , ax 
	 cmp [ byte ptr ds:bx ] , 0 
	 jne eror
	 push bx 
     mov al , [ byte ptr ds:offset RowKelet ] 
	 sub al , 30h 
	 mov bl , 2 
	 mul bl 
	 add al , 10 
	 mov dl , al 
     mov al , [ byte ptr ds:offset ColumnKelet ] 
	 sub al , 30h 
	 mov bl , 2 
	 mul bl 
	 add al , 3 
	 mov dh , al 	 
	 call Printing
	 mov dl , [ byte ptr ds:offset NumberKelet ]
     pop bx 	 
	 mov [ byte ptr ds:bx ] , dl 
	 call printchar
	 jmp finishproc
eror: 
     call BlackColorProc
     mov cx, 11		; number of characters
     mov bp, offset Wrong
	 mov ah, 13h
     mov bh, 0		; video page number
     mov bl, 00001111b	; attribute
     mov dl, 1		; starting column
     mov dh, 1		; starting row
     mov al, 0		; 0-3 indicating mode
     push ds
     pop es		; es:bp pointer to string to be written
     int 10h    
	 call delay 
	 call BlackColorProc
finishproc:
	 ret 
endp EndKelet
proc CheckIfFinish ; Check if finish 
     mov bx , offset Sudokutable2
	 dec bx 
	 mov cx , 81
loopChecking:
     inc bx 
     cmp [ byte ptr ds:bx ] , 0  
     je NoFinish
     loop loopChecking
	 mov cx , 1
     jmp beforeret	 
NoFinish:	 
mov cx , 0  
beforeret:
     ret 
endp CheckIfFinish
proc True ; Check if the sudoku true ( only for sudoku which have unique solutions ) --- for this moment i don't use 
     mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 mov cx , 81 
LoopTrue:
	 mov al , [ byte ptr ds:di ]
	 mov bl , [ byte ptr ds:si ] 
     cmp bl , al 
     jne false 
	 inc si 
	 inc di 
	 loop LoopTrue
     mov cx , 1 
	 jmp itistrue
false:	 
	 mov cx , 0 
itistrue:	 
	 ret 
endp True
proc OpenFile
; Open file
	 mov ah, 3Dh
	 xor al, al
	 int 21h
	 jc openerror
	 mov [filehandle], ax
	 ret
openerror:
     mov dx, offset ErrorMsg
	 mov ah, 9h
	 int 21h
ret
endp OpenFile

proc ReadHeader
; Read BMP file header, 54 bytes
     mov ah,3fh
	 mov bx, [filehandle]
	 mov cx,54
	 mov dx,offset Header
	 int 21h
ret
endp ReadHeader

proc ReadPalette
; Read BMP file color palette, 256 colors * 4 bytes (400h)
     mov ah,3fh
     mov cx,400h
     mov dx,offset Palette
     int 21h
ret
endp ReadPalette

proc CopyPal
; Copy the colors palette to the video memory
; The number of the first color should be sent to port 3C8h
; The palette is sent to port 3C9h
     mov si,offset Palette
     mov cx,256
     mov dx,3C8h
	 mov al,0
; Copy starting color to port 3C8h
     out dx,al
; Copy palette itself to port 3C9h
     inc dx
PalLoop:
; Note: Colors in a BMP file are saved as BGR values rather than RGB.
     mov al,[si+2] ; Get red value.
	 shr al,2 ; Max. is 255, but video palette maximal
; value is 63. Therefore dividing by 4.
     out dx,al ; Send it.
	 mov al,[si+1] ; Get green value.
	 shr al,2
	 out dx,al ; Send it.
	 mov al,[si] ; Get blue value.
	 shr al,2
	 out dx,al ; Send it.
	 add si,4 ; Point to next color.
; (There is a null chr. after every color.)
     loop PalLoop
ret
endp CopyPal

proc CopyBitmap
; BMP graphics are saved upside-down.
; Read the graphic line by line (200 lines in VGA format),
; displaying the lines from bottom to top.
     mov ax, 0A000h
	 mov es, ax
	 mov cx,200
PrintBMPLoop:
     push cx
; di = cx*320, point to the correct screen line
     mov di,cx
	 shl cx,6
	 shl di,8
	 add di,cx
; Read one line
     mov ah,3fh
	 mov cx,320
	 mov dx,offset ScrLine
	 int 21h
; Copy one line into video memory
     cld ; Clear direction flag, for movsb
     mov cx,320
     mov si,offset ScrLine
     rep movsb ; Copy line to the screen
	 ;rep movsb is same as the following code:
	 ;mov es:di, ds:si
	 ;inc si
	 ;inc di
	 ;dec cx
	 ;loop until cx=0
	 pop cx
	 loop PrintBMPLoop
ret
endp CopyBitmap
proc RowSwitcher13 ; Switch in a random 3x9 box the 1st and the 3rd rows 
     mov di , offset Sudokutable1
	 cmp al , 33h 
	 jnle isit2 
	 mov al , 0 
	 jmp checked
isit2:
	 cmp al , 36h 
	 jnle its3 	 
	 mov al , 1  
	 jmp checked
its3:
	 mov al , 2 
checked:
	 mov bl , 27
	 mul bl 
	 add di , ax 
     mov cx , 9 
     mov bx , offset RowHolder 
LoopHold:
	 mov dl , [ byte ptr ds:di ] 
	 mov [ byte ptr ds:bx ] , dl 
	 inc di 
	 inc bx 
	 loop LoopHold
	 sub di , 9 
	 mov si , di 
	 add di , 18
     mov cx , 9 	 
LoopSwitch:
	 mov dl , [ byte ptr ds:di ]
	 mov [ byte ptr ds:si ] , dl 
	 inc di 
	 inc si 
	 loop LoopSwitch
     mov bx , offset RowHolder 
     add si , 9
     mov cx , 9 	 
LoopSwitchAgain:
     mov dl , [ byte ptr ds:bx ] 
	 mov [ byte ptr ds:si ] , dl 
	 inc si 
	 inc bx 
	 loop LoopSwitchAgain 
	 ret 
endp RowSwitcher13
proc RowSwitcher23 ; ------------------- in this moment i dont use 
     mov di , offset Sudokutable1
     add di , 9 
	 call random 
	 cmp al , 33h 
	 jnle isit22 
	 mov al , 0 
	 jmp checked2
isit22:
	 cmp al , 36h 
	 jnle its32	 
	 mov al , 1  
	 jmp checked2
its32:
	 mov al , 2 
checked2:
	 mov bl , 27
	 mul bl 
	 add di , ax 
     mov cx , 9 
     mov bx , offset RowHolder 
LoopHold2:
	 mov dl , [ byte ptr ds:di ] 
	 mov [ byte ptr ds:bx ] , dl 
	 inc di 
	 inc bx 
	 loop LoopHold2
	 sub di , 9 
	 mov si , di 
	 add di , 9
     mov cx , 9 	 
LoopSwitch2:
	 mov dl , [ byte ptr ds:di ]
	 mov [ byte ptr ds:si ] , dl 
	 inc di 
	 inc si 
	 loop LoopSwitch2
     mov bx , offset RowHolder 
     mov cx , 9 	 
LoopSwitchAgain2:
     mov dl , [ byte ptr ds:bx ] 
	 mov [ byte ptr ds:si ] , dl 
	 inc si 
	 inc bx 
	 loop LoopSwitchAgain2 
	 ret 
endp RowSwitcher23
proc CheckingSudoku ; Check the sudoku --- > not only for unique solution 
;---------------------ROW_CHECK----------------------
;----------------------------------------------------
     mov bx , offset Sudokutable2
     mov di , 0 
LoopRows:
     mov si , offset many1 
     dec si 	 
loop99:
	 mov [ byte ptr ds:offset Sum ] , 0 
	 inc si 
	 mov [ byte ptr ds:si ] , 0 
	 cmp si , offset many9 
	 jne loop99 
	 mov cx , 9 
loop9x9:
	 mov dl , [ byte ptr ds:bx ] 
	 sub dl , 30h 
	 mov al , dl 
	 dec al 
	 mov si , offset many1
	 mov ah , 0  
	 add si , ax
	 inc [ byte ptr ds:si ] 
	 add [ byte ptr ds: offset Sum ] , dl 
	 inc bx 
	 loop loop9x9
	 cmp [byte ptr ds: offset Sum]	 , 45 
	 jne NotGood
	 mov si , offset many1
	 dec si 
loop9:	 
     inc si
	 mov dl , [ byte ptr ds:si ]
     cmp dl , 1 
     jne NotGood 
     cmp si , offset many9
     jne loop9  	 
	 inc di 
	 cmp di , 9 
	 jne LoopRows 
;----------------------------------------------------
;---------------------Coulmn_CHECK-------------------
;----------------------------------------------------
     mov bx , offset Sudokutable2
     mov di , 0 
	 add bx , 80
LoopColumns:
     sub bx , 80
     mov si , offset many1 
     dec si 	 
loop999:
	 mov [ byte ptr ds:offset Sum ] , 0 
	 inc si 
	 mov [ byte ptr ds:si ] , 0 
	 cmp si , offset many9 
	 jne loop999 
	 mov cx , 9 
loop9x99:
	 mov dl , [ byte ptr ds:bx ] 
	 sub dl , 30h 
	 mov al , dl 
	 dec al 
	 mov si , offset many1
	 mov ah , 0  
	 add si , ax
	 inc [ byte ptr ds:si ] 
	 add [ byte ptr ds: offset Sum ] , dl 
	 add bx , 9 
	 loop loop9x99
	 cmp [byte ptr ds: offset Sum]	 , 45 
	 jne NotGood
	 mov si , offset many1
	 dec si 
loop9999:	 
     inc si
	 mov dl , [ byte ptr ds:si ]
     cmp dl , 1 
     jne NotGood 
     cmp si , offset many9
     jne loop9999  	 
	 inc di 
	 cmp di , 9 
	 jne LoopColumns
;----------------------------------------------------
;---------------------Box_CHECK----------------------
;----------------------------------------------------
     mov bx , offset Sudokutable2
     call Boxing
	 cmp ah , 33h
     je finishomg
     mov bx , offset Sudokutable2
	 add bx , 3 
     call Boxing      
	 cmp ah , 33h
     je finishomg	 
     mov bx , offset Sudokutable2
	 add bx , 6 
     call Boxing 
	 cmp ah , 33h
     je finishomg	 
     mov bx , offset Sudokutable2
	 add bx , 27 
     call Boxing
	 cmp ah , 33h
     je finishomg
     mov bx , offset Sudokutable2
	 add bx , 30  
     call Boxing      
	 cmp ah , 33h
     je finishomg
     mov bx , offset Sudokutable2
	 add bx , 33  
     call Boxing 
	 cmp ah , 33h
     je finishomg	 
     mov bx , offset Sudokutable2
	 add bx , 54 
     call Boxing 
	 cmp ah , 33h
     je finishomg
     mov bx , offset Sudokutable2
	 add bx , 57  
     call Boxing 
	 cmp ah , 33h
     je finishomg     
     mov bx , offset Sudokutable2
	 add bx , 60  
     call Boxing 
	 cmp ah , 33h
     jmp finishomg	 
NotGood:
	 mov ah , 33h 
finishomg:
	 ret 
endp CheckingSudoku
proc Boxing ; Check the 3x3 boxes 
     mov si , offset many1 
     dec si 	 
loop999999:
	 mov [ byte ptr ds:offset Sum ] , 0 
	 inc si 
	 mov [ byte ptr ds:si ] , 0 
	 cmp si , offset many9 
	 jne loop999999 
	 sub bx , 6
	 mov di , 0 
loopbox2:
	 mov cx , 3 
	 add bx , 6
loopbox1:
	 mov si , offset many1
	 dec si 
	 mov dl , [ byte ptr ds:bx ] 
	 mov dh , 0 
	 sub dl , 30h
	 add si , dx 
	 inc [ byte ptr ds:si ] 
	 inc bx 
	 loop loopbox1
	 inc di 
	 cmp di , 3 
	 jne loopbox2
	 mov si , offset many1
	 dec si 
loop99999:	 
     inc si
	 mov dl , [ byte ptr ds:si ]
     cmp dl , 1 
     jne NotGood1 
     cmp si , offset many9
     jne loop99999  
     jmp finish1
NotGood1:
     mov ah , 33h
finish1: 
	 ret 
endp Boxing
proc pixel ; Put pixel 
     mov bh,0h
	 mov al, 00001111b
	 mov ah,0Ch
	 int 10h
     ret
endp pixel
start:
	 mov ax , @data
	 mov ds , ax
; Creating new sudoku 
	 call Random
	 cmp ax , 38h 
	 jg nevermind
	 mov cx , ax
	 push cx 
     call SwitchNumber
	 call Delay 
	 call Random
	 pop cx 
	 push cx 
	 cmp cl , al 
	 jne conconcon
	 inc al 
conconcon:
     call SwitchNumber
	 call Delay
	 call Random
	 pop cx 
	 push cx 
	 cmp cl , al 
	 jne conconcon2
	 add al , 2 
conconcon2:
     call SwitchNumber 
	 call Delay
	 call Random
	 pop cx 
	 push cx 
	 cmp cl , al 
	 jne conconcon3
	 add al , 2 
conconcon3:
     call SwitchNumber
	 jmp conconcon4
nevermind:
     call SwitchNumber
	 call Delay 
	 call Random
     call SwitchNumber
	 call Delay 
	 call Random
     call SwitchNumber
	 call Delay 
	 call Random
     call SwitchNumber
conconcon4:
	 call Delay 
	 call Random
	 call RowSwitcher13
;------------------------------------------------
	 mov ax, 013h               ; init graph mode
     int 010h
     mov ax, 0A000h
     mov es, ax
main1:
	 call LightRedColorProc ; Print the light red color 
     call YellowColorProc ; Print the yellow color 
     call WordProc ; Print the word 
	 call ButtonProc ; Print the buttons 
main2: ; Check which button clicked 
	 in al,060h   ; al <- scan cod    ah <- ASCII
	 cmp al , 11
     je Countinue	
     cmp al , 2
     je	Info
	 cmp al , 3 
	 je exit 
	 jmp main2
Countinue: 
	 mov ah , 01h 
	 int 21h
Sudoku:
     mov ah, 0
     mov al, 2
	 int 10h
	 mov ax, 013h               ; init graph mode
     int 010h
     mov ax, 0A000h
     mov es, ax
;---------------------------- Print the sudoku table ( without numbers ) 
	 mov cx , 91 
	 sub cx , 16 
looppixel2:
	 mov dx , 35
     add cx , 16 
looppixel:
	 call pixel
     inc dx 
     cmp dx , 179 
     jne looppixel	 
	 cmp cx , 235 
	 jne looppixel2
	 mov cx , 140 
	 sub cx , 96 
looppixel3:
	 mov dx , 35
     add cx , 48 
looppixel4:
	 call pixel
     inc dx 
     cmp dx , 179 
     jne looppixel4	 
	 cmp cx , 236 
	 jne looppixel3
	 mov dx , 19 
looppixel6:
	 mov cx , 91
     add dx , 16 
looppixel5:
	 call pixel
     inc cx 
     cmp cx , 237 
     jne looppixel5	 
	 cmp dx , 179 
	 jne looppixel6
	 mov dx , 18
	 sub dx , 32 
looppixel8:
	 mov cx , 91
     add dx , 48 
looppixel7:
	 call pixel
     inc cx 
     cmp cx , 237 
     jne looppixel7 
	 cmp dx , 178 
	 jne looppixel8
;---------------------------	 
	 mov dh, 5	; row
	 mov al , 31h
LoopSudoku: ; Print the numbers above the sudoku
     mov dl, 10	; column 
	 call Printing
     mov dl , al 
 	 call printchar
	 add dh , 2 
	 inc al 
	 cmp al , 3Ah 
	 jne LoopSudoku
	 mov al , 31h
	 mov dl , 12 ; column 
LoopSudoku2: ; Print the numbers above the sudoku
	 mov dh , 3	 ; row
	 call Printing
	 mov cl , dl 
     mov dl , al 
 	 call printchar
	 mov dl , cl 
	 add dl , 2 
	 inc al 
	 cmp al , 3Ah 
	 jne LoopSudoku2
	 call random
	 cmp al , 33h 
	 jle option1 ; Option 1 game mode 
	 cmp al , 36h 
	 jle option2 ; Option 2 game mode	 
	 jmp option3 ; Option 3 game mode
option1: ; Print Option1 
	 mov si , offset Sudokutable2
	 mov di , offset Sudokutable1
	 mov dh, 5	; row
     mov dl, 12	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov si , offset Sudokutable2
	 mov di , offset Sudokutable1
	 inc di
	 inc si 
	 mov dh, 5	; row
     mov dl, 14	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov si , offset Sudokutable2
	 mov di , offset Sudokutable1
	 add di , 2 
     add si , 2 	 
	 mov dh, 5	; row
     mov dl, 16	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 4
	 add si , 4 
	 mov dh, 5	; row
     mov dl, 20	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 6 
	 add si , 6 
	 mov dh, 5	; row
     mov dl, 24	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 9 
	 add si , 9
	 mov dh, 7	; row
     mov dl, 12	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 10 
	 add si , 10
	 mov dh, 7	; row
     mov dl, 14	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 12
	 add si , 12
	 mov dh, 7	; row
     mov dl, 18	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 13
	 add si , 13
	 mov dh, 7	; row
     mov dl, 20	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 14
	 add si , 14
	 mov dh, 7	; row
     mov dl, 22	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 17
	 add si , 17
	 mov dh, 7	; row
     mov dl, 28	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 19 
	 add si , 19
	 mov dh, 9	; row
     mov dl, 14	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 20 
	 add si , 20
	 mov dh, 9	; row
     mov dl, 16	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di]
     mov [ byte ptr ds:si ] , dl 	 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 25
	 add si , 25
	 mov dh, 9	; row
     mov dl, 26	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di]
     mov [ byte ptr ds:si ] , dl 	 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 27 
	 add si , 27
	 mov dh, 11	; row
     mov dl, 12	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 31 
	 add si , 31
	 mov dh, 11	; row
     mov dl, 20	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 35 
	 add si , 35
	 mov dh, 11	; row
     mov dl, 28	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 36 
	 add si , 36
	 mov dh, 13	; row
     mov dl, 12 ; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 39 
	 add si , 39
	 mov dh, 13	; row
     mov dl, 18	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 41 
	 add si , 41
	 mov dh, 13	; row
     mov dl, 22	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 44 
	 add si , 44
	 mov dh, 13	; row
     mov dl, 28	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 45 
	 add si , 45
	 mov dh, 15	; row
     mov dl, 12	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 49 
	 add si , 49
	 mov dh, 15	; row
     mov dl, 20	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 53 
	 add si , 53
	 mov dh, 15	; row
     mov dl, 28	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 55 
	 add si , 55
	 mov dh, 17	; row
     mov dl, 14	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 60 
	 add si , 60
	 mov dh, 17	; row
     mov dl, 24	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 61 
	 add si , 61
	 mov dh, 17	; row
     mov dl, 26	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 66 
	 add si , 66
	 mov dh, 19	; row
     mov dl, 18	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 67 
	 add si , 67
	 mov dh, 19	; row
     mov dl, 20	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 68
	 add si , 68
	 mov dh, 19	; row
     mov dl, 22	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 69
	 add si , 69
	 mov dh, 19	; row
     mov dl, 24	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 70
	 add si , 70
	 mov dh, 19	; row
     mov dl, 26	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 71 
	 add si , 71
	 mov dh, 19	; row
     mov dl, 28	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 76 
	 add si , 76
	 mov dh, 21	; row
     mov dl, 20	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 79 
	 add si , 79
	 mov dh, 21	; row
     mov dl, 26	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 80 
	 add si , 80
	 mov dh, 21	; row
     mov dl, 28	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl  
	 call printchar
     jmp conue
option2: ; Print Option1 
	 mov si , offset Sudokutable2
	 mov di , offset Sudokutable1
	 inc di
	 inc si 
	 mov dh, 5	; row
     mov dl, 14	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov si , offset Sudokutable2
	 mov di , offset Sudokutable1
	 add di , 2 
     add si , 2 	 
	 mov dh, 5	; row
     mov dl, 16	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov si , offset Sudokutable2
	 mov di , offset Sudokutable1
	 add di , 3 
     add si , 3 	 
	 mov dh, 5	; row
     mov dl, 18	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov si , offset Sudokutable2
	 mov di , offset Sudokutable1
	 add di , 5 
     add si , 5 	 
	 mov dh, 5	; row
     mov dl, 22	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov si , offset Sudokutable2
	 mov di , offset Sudokutable1
	 add di , 6 
     add si , 6 	 
	 mov dh, 5	; row
     mov dl, 24	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov si , offset Sudokutable2
	 mov di , offset Sudokutable1
	 add di , 7 
     add si , 7 	 
	 mov dh, 5	; row
     mov dl, 26	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 9 
	 add si , 9
	 mov dh, 7	; row
     mov dl, 12	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 12
	 add si , 12
	 mov dh, 7	; row
     mov dl, 18	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 14
	 add si , 14
	 mov dh, 7	; row
     mov dl, 22	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 17
	 add si , 17
	 mov dh, 7	; row
     mov dl, 28	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 19 
	 add si , 19
	 mov dh, 9	; row
     mov dl, 14	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 20 
	 add si , 20
	 mov dh, 9	; row
     mov dl, 16	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di]
     mov [ byte ptr ds:si ] , dl 	 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 25
	 add si , 25
	 mov dh, 9	; row
     mov dl, 26	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di]
     mov [ byte ptr ds:si ] , dl 	 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 27 
	 add si , 27
	 mov dh, 11	; row
     mov dl, 12	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 31  
	 add si , 31
	 mov dh, 11	; row
     mov dl, 20	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 32 
	 add si , 32
	 mov dh, 11	; row
     mov dl, 22	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 35 
	 add si , 35
	 mov dh, 11	; row
     mov dl, 28	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 36 
	 add si , 36
	 mov dh, 13	; row
     mov dl, 12 ; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 37 
	 add si , 37
	 mov dh, 13	; row
     mov dl, 14 ; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 39 
	 add si , 39
	 mov dh, 13	; row
     mov dl, 18	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 43 
	 add si , 43
	 mov dh, 13	; row
     mov dl, 26	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 44 
	 add si , 44
	 mov dh, 13	; row
     mov dl, 28	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 46 
	 add si , 46
	 mov dh, 15	; row
     mov dl, 14	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 51 
	 add si , 51
	 mov dh, 15	; row
     mov dl, 24	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 53 
	 add si , 53
	 mov dh, 15	; row
     mov dl, 28	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 56 
	 add si , 56
	 mov dh, 17	; row
     mov dl, 16	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 58 
	 add si , 58
	 mov dh, 17	; row
     mov dl, 20	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 59 
	 add si , 59
	 mov dh, 17	; row
     mov dl, 22	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 61 
	 add si , 61
	 mov dh, 17	; row
     mov dl, 26	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 67 
	 add si , 67
	 mov dh, 19	; row
     mov dl, 20	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 68
	 add si , 68
	 mov dh, 19	; row
     mov dl, 22	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 70
	 add si , 70
	 mov dh, 19	; row
     mov dl, 26	; column 
	 call Printing
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 76 
	 add si , 76
	 mov dh, 21	; row
     mov dl, 20	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 78 
	 add si , 78
	 mov dh, 21	; row
     mov dl, 24	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl  
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 79 
	 add si , 79
	 mov dh, 21	; row
     mov dl, 26	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 80 
	 add si , 80
	 mov dh, 21	; row
     mov dl, 28	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl  
	 call printchar
     jmp conue
option3: ; Print Option3
	 mov si , offset Sudokutable2
	 mov di , offset Sudokutable1
	 mov dh, 5	; row
     mov dl, 12	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov si , offset Sudokutable2
	 mov di , offset Sudokutable1
	 inc di
	 inc si 
	 mov dh, 5	; row
     mov dl, 14	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov si , offset Sudokutable2
	 mov di , offset Sudokutable1
	 add di , 2 
     add si , 2 	 
	 mov dh, 5	; row
     mov dl, 16	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov si , offset Sudokutable2
	 mov di , offset Sudokutable1
	 add di , 4 
     add si , 4 	 
	 mov dh, 5	; row
     mov dl, 20	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov si , offset Sudokutable2
	 mov di , offset Sudokutable1
	 add di , 6 
     add si , 6 	 
	 mov dh, 5	; row
     mov dl, 24	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov si , offset Sudokutable2
	 mov di , offset Sudokutable1
	 add di , 7 
     add si , 7 	 
	 mov dh, 5	; row
     mov dl, 26	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 9 
	 add si , 9
	 mov dh, 7	; row
     mov dl, 12	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov si , offset Sudokutable2
	 mov di , offset Sudokutable1
	 add di , 10 
	 add si , 10
	 mov dh, 7	; row
     mov dl, 14	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov si , offset Sudokutable2
	 mov di , offset Sudokutable1
	 add di , 11 
	 add si , 11
	 mov dh, 7	; row
     mov dl, 16	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 12
	 add si , 12
	 mov dh, 7	; row
     mov dl, 18	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 15
	 add si , 15
	 mov dh, 7	; row
     mov dl, 24	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 17
	 add si , 17
	 mov dh, 7	; row
     mov dl, 28	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 18 
	 add si , 18
	 mov dh, 9	; row
     mov dl, 12	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 21 
	 add si , 21
	 mov dh, 9	; row
     mov dl, 18	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di]
     mov [ byte ptr ds:si ] , dl 	 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 23
	 add si , 23
	 mov dh, 9	; row
     mov dl, 22	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di]
     mov [ byte ptr ds:si ] , dl 	 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 26
	 add si , 26
	 mov dh, 9	; row
     mov dl, 28	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di]
     mov [ byte ptr ds:si ] , dl 	 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 27 
	 add si , 27
	 mov dh, 11	; row
     mov dl, 12	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 28 
	 add si , 28
	 mov dh, 11	; row
     mov dl, 14	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 31 
	 add si , 31
	 mov dh, 11	; row
     mov dl, 20	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 32 
	 add si , 32
	 mov dh, 11	; row
     mov dl, 22	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 33 
	 add si , 33
	 mov dh, 11	; row
     mov dl, 24	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 38 
	 add si , 38
	 mov dh, 13	; row
     mov dl, 16 ; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 40 
	 add si , 40
	 mov dh, 13	; row
     mov dl, 20	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 41 
	 add si , 41
	 mov dh, 13	; row
     mov dl, 22	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 45 
	 add si , 45
	 mov dh, 15	; row
     mov dl, 12	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 46 
	 add si , 46
	 mov dh, 15	; row
     mov dl, 14	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 49 
	 add si , 49
	 mov dh, 15	; row
     mov dl, 20	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 51 
	 add si , 51
	 mov dh, 15	; row
     mov dl, 24	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 57 
	 add si , 57
	 mov dh, 17	; row
     mov dl, 18	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 59 
	 add si , 59
	 mov dh, 17	; row
     mov dl, 22	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 60 
	 add si , 60
	 mov dh, 17	; row
     mov dl, 24	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 68 
	 add si , 68
	 mov dh, 19	; row
     mov dl, 22	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 71
	 add si , 71
	 mov dh, 19	; row
     mov dl, 28	; column 
	 call Printing
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 72 
	 add si , 72
	 mov dh, 21	; row
     mov dl, 12	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 74 
	 add si , 74
	 mov dh, 21	; row
     mov dl, 16	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 78 
	 add si , 78
	 mov dh, 21	; row
     mov dl, 24	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl  
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 79 
	 add si , 79
	 mov dh, 21	; row
     mov dl, 26	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl 
	 call printchar
	 mov di , offset Sudokutable1
	 mov si , offset Sudokutable2
	 add di , 80 
	 add si , 80
	 mov dh, 21	; row
     mov dl, 28	; column 
	 call Printing
	 mov dl , [ byte ptr ds:di] 
	 mov [ byte ptr ds:si ] , dl  
	 call printchar
     jmp conue
conue:
	 call CyanColorProc3 ; Print the cyan color 
	 call Delay ; Delay the program
	 jmp CheckingRow 
Delete3:
     call BlackColorProc
LoopKelet:
CheckingRow:
     mov cx, 4		; number of characters
     mov bp, offset msgrow 
	 call PrintString
	 mov dh, 3	; row
     mov dl, 1	; column 
	 call Printing
	 mov ah , 1h 
	 int 21h
	 cmp al , 39h 
	 jnle CheckingRow
     cmp al , 31h 
     jnge CheckingRow
	 mov [ byte ptr ds: offset RowKelet ] , al 
WaitForBuffer3:
     in al , 60h 
	 cmp al , 28 
	 je Continue3
	 cmp al , 14 
	 je Delete3
	 mov dh, 3	; row
     mov dl, 2	; column 
	 call Printing
	 mov ah , 1h 
	 int 21h 
     mov cx, 1		; number of characters
     mov bp, offset Wrong
	 mov ah, 13h
     mov bh, 0		; video page number
     mov bl, 11111111b	; attribute
     mov dl, 2		; starting column
     mov dh, 3		; starting row
     mov al, 0		; 0-3 indicating mode
     push ds
     pop es		; es:bp pointer to string to be written
     int 10h    
	 jne WaitForBuffer3
continue3:
     call BlackColorProc
	 jmp CheckingColumn
Delete2:
     call BlackColorProc
CheckingColumn:
	 mov cx, 7		; number of characters
     mov bp, offset msgcolumn 
	 call PrintString
	 mov dh, 3	; row
     mov dl, 1	; column 
	 call Printing
	 mov ah , 1h 
	 int 21h
	 cmp al , 39h 
	 jnle CheckingColumn
     cmp al , 31h 
     jnge CheckingColumn	
	 mov [ byte ptr ds: offset ColumnKelet ] , al 
WaitForBuffer2:
     in al , 60h 
	 cmp al , 28 
	 je Continue2
	 cmp al , 14 
	 je Delete2
	 mov dh, 3	; row
     mov dl, 2	; column 
	 call Printing
	 mov ah , 1h 
	 int 21h 
     mov cx, 1		; number of characters
     mov bp, offset Wrong
	 mov ah, 13h
     mov bh, 0		; video page number
     mov bl, 11111111b	; attribute
     mov dl, 2		; starting column
     mov dh, 3		; starting row
     mov al, 0		; 0-3 indicating mode
     push ds
     pop es		; es:bp pointer to string to be written
     int 10h    
	 jne WaitForBuffer2
continue2:
     call BlackColorProc 
	 jmp CheckingNumber
Delete:
     call BlackColorProc
CheckingNumber:	 
	 mov cx, 7		; number of characters
     mov bp, offset msgnumber 
	 call PrintString	
	 mov dh, 3	; row
     mov dl, 1	; column 
	 call Printing
     mov ah , 1h 
	 int 21h   
	 cmp al , 39h 
	 jnle CheckingNumber
     cmp al , 31h 
     jnge CheckingNumber
	 mov [ byte ptr ds: offset NumberKelet ] , al 	 
WaitForBuffer:
     in al , 60h 
	 cmp al , 28 
	 je Continue
	 cmp al , 14 
	 je Delete
	 mov dh, 3	; row
     mov dl, 2	; column 
	 call Printing
	 mov ah , 1h 
	 int 21h 
     mov cx, 1		; number of characters
     mov bp, offset Wrong
	 mov ah, 13h
     mov bh, 0		; video page number
     mov bl, 11111111b	; attribute
     mov dl, 2		; starting column
     mov dh, 3		; starting row
     mov al, 0		; 0-3 indicating mode
     push ds
     pop es		; es:bp pointer to string to be written
     int 10h    
	 jne WaitForBuffer
continue:
     call BlackColorProc
     call EndKelet	 
     call CheckIfFinish
	 cmp cx , 1 
	 jne Delete3
     mov ah, 0
     mov al, 2
	 int 10h
	 mov ax, 013h               ; init graph mode
     int 010h
     mov ax, 0A000h
     mov es, ax
	 call CheckingSudoku
	 cmp ah , 33h 
	 je LoserHAHA
      mov dx, offset filename2
	 ; Process BMP file
     call OpenFile
     call ReadHeader
	 call ReadPalette
	 call CopyPal
	 call CopyBitmap
	 ; Wait for key press
	 jmp exit 
LoserHAHA:
     mov dx, offset filename
	 ; Process BMP file
     call OpenFile
     call ReadHeader
	 call ReadPalette
	 call CopyPal
	 call CopyBitmap
	 jmp exit 	 
Info:
     mov dx , offset filename3
	 ; Process BMP file
     call OpenFile
     call ReadHeader
	 call ReadPalette
	 call CopyPal
	 call CopyBitmap
klita:
	 in al , 60h 
	 cmp al , 1 
	 jne klita 
     mov ah, 0
     mov al, 2
	 int 10h
	 mov ax, 013h               ; init graph mode
     int 010h
     mov ax, 0A000h
     mov es, ax
     jmp Sudoku
; --------------------------
; Your code here
; --------------------------
	
exit:
	mov ax, 4c00h
	int 21h
END start


